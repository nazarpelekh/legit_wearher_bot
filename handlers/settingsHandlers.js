const { Markup } = require("telegraf");
const FormatUtils = require("../utils/formatUtils");

// –õ–æ–≥—É–≤–∞–Ω–Ω—è
const log = (message) => {
    console.log(`[${new Date().toISOString()}] ${message}`);
};

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
const defaultSettings = {
    notifications: false,
    kpThreshold: 5.0,
    auroraNotifications: true,
    dailyForecast: false,
    timezone: "Europe/Kiev",
};

// –ë–µ–∑–ø–µ—á–Ω–µ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async function safeEditMessage(ctx, text, options = {}) {
    try {
        await ctx.editMessageText(text, options);
    } catch (error) {
        if (error.description?.includes("message is not modified")) {
            log("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–µ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è");
            return true;
        } else {
            log(`–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${error.message}`);
            try {
                await ctx.reply(text, options);
                return true;
            } catch (sendError) {
                log(
                    `–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${sendError.message}`
                );
                return false;
            }
        }
    }
    return true;
}

// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
async function showMainSettings(ctx, userSettings) {
    const userId = ctx.from.id;
    const settings = userSettings.get(userId) || defaultSettings;

    const keyboard = Markup.inlineKeyboard([
        [
            Markup.button.callback(
                "üîî –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è",
                "setup_notifications"
            ),
        ],
        [Markup.button.callback("üåå –ü–æ–ª—è—Ä–Ω—ñ —Å—è–π–≤–∞", "setup_aurora")],
        [Markup.button.callback("üìä –©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑", "setup_daily")],
        [Markup.button.callback("üîß –°–∫–∏–Ω—É—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", "reset_settings")],
    ]);

    const statusEmoji = settings.notifications ? "üü¢" : "üî¥";
    const auroraEmoji = settings.auroraNotifications ? "üü¢" : "üî¥";
    const dailyEmoji = settings.dailyForecast ? "üü¢" : "üî¥";

    await ctx.reply(
        `‚öôÔ∏è <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Legit Weather Bot</b>\n\n` +
            `<b>üî∏ –ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:</b>\n` +
            `${statusEmoji} –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: ${
                settings.notifications ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ"
            }\n` +
            `üìà –ü–æ—Ä—ñ–≥ Kp: ${settings.kpThreshold}\n` +
            `${auroraEmoji} –ü–æ–ª—è—Ä–Ω—ñ —Å—è–π–≤–∞: ${
                settings.auroraNotifications ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ"
            }\n` +
            `${dailyEmoji} –©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑: ${
                settings.dailyForecast ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ"
            }\n\n` +
            `<b>üî∏ –©–æ –æ–∑–Ω–∞—á–∞—î –ø–æ—Ä—ñ–≥ Kp?</b>\n` +
            `‚Ä¢ 3.0 - —á–∞—Å—Ç—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è (–Ω–µ–≤–µ–ª–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å)\n` +
            `‚Ä¢ 5.0 - –ø–æ–º—ñ—Ä–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è (–≥–µ–æ–º–∞–≥–Ω—ñ—Ç–Ω—ñ –±—É—Ä—ñ)\n` +
            `‚Ä¢ 7.0 - —Ä—ñ–¥–∫—ñ—Å–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è (—Å–∏–ª—å–Ω—ñ –±—É—Ä—ñ)\n\n` +
            `–û–±–µ—Ä—ñ—Ç—å, —â–æ —Ö–æ—á–µ—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏:`,
        {
            ...keyboard,
            parse_mode: "HTML",
        }
    );
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ä–æ–≥—É Kp
async function showKpThresholdSettings(ctx, userSettings) {
    const userId = ctx.from.id;
    const settings = userSettings.get(userId) || { ...defaultSettings };

    const thresholds = [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0];
    const keyboard = [];

    for (let i = 0; i < thresholds.length; i += 3) {
        const row = [];
        for (let j = i; j < Math.min(i + 3, thresholds.length); j++) {
            const threshold = thresholds[j];
            const isSelected = settings.kpThreshold === threshold;
            row.push({
                text: isSelected ? `üîò ${threshold}` : `‚ö™ ${threshold}`,
                callback_data: `set_kp_${threshold}`,
            });
        }
        keyboard.push(row);
    }

    keyboard.push([
        {
            text: settings.notifications
                ? "üî¥ –í–∏–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"
                : "üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è",
            callback_data: "toggle_notifications",
        },
    ]);
    keyboard.push([{ text: "‚Üê –ù–∞–∑–∞–¥", callback_data: "back_to_settings" }]);

    const statusEmoji = settings.notifications ? "üü¢" : "üî¥";

    const message =
        `üîî <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å</b>\n\n` +
        `${statusEmoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${
            settings.notifications ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ"
        }\n` +
        `üìà <b>–ü–æ—Ç–æ—á–Ω–∏–π –ø–æ—Ä—ñ–≥:</b> Kp = ${settings.kpThreshold}\n\n` +
        `<b>üî∏ –û–±–µ—Ä—ñ—Ç—å –ø–æ—Ä—ñ–≥ Kp –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å:</b>\n` +
        `‚Ä¢ <b>1.0-2.0</b> üü¢ - –¥—É–∂–µ —á–∞—Å—Ç–æ (–±—É–¥—å-—è–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å)\n` +
        `‚Ä¢ <b>3.0-4.0</b> üü° - —Ä–µ–≥—É–ª—è—Ä–Ω–æ (–Ω–µ–≤–µ–ª–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å)\n` +
        `‚Ä¢ <b>5.0-6.0</b> üü† - –ø–æ–º—ñ—Ä–Ω–æ (–≥–µ–æ–º–∞–≥–Ω—ñ—Ç–Ω—ñ –±—É—Ä—ñ)\n` +
        `‚Ä¢ <b>7.0-9.0</b> üî¥ - —Ä—ñ–¥–∫–æ (—Å–∏–ª—å–Ω—ñ –±—É—Ä—ñ)\n\n` +
        `–ü—Ä–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—ñ –æ–±—Ä–∞–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è.`;

    await safeEditMessage(ctx, message, {
        reply_markup: { inline_keyboard: keyboard },
        parse_mode: "HTML",
    });
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–ª—è—Ä–Ω–∏—Ö —Å—è–π–≤
async function showAuroraSettings(ctx, userSettings) {
    const userId = ctx.from.id;
    const settings = userSettings.get(userId) || { ...defaultSettings };

    const statusEmoji = settings.auroraNotifications ? "üü¢" : "üî¥";
    const statusText = settings.auroraNotifications ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ";

    const keyboard = [];

    if (settings.auroraNotifications) {
        keyboard.push([
            { text: "üî¥ –í–∏–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data: "disable_aurora" },
        ]);
    } else {
        keyboard.push([
            { text: "üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", callback_data: "enable_aurora" },
        ]);
    }

    keyboard.push([{ text: "‚Üê –ù–∞–∑–∞–¥", callback_data: "back_to_settings" }]);

    const message =
        `üåå <b>–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–ª—è—Ä–Ω—ñ —Å—è–π–≤–∞</b>\n\n` +
        `${statusEmoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${statusText}\n\n` +
        `<b>üî∏ –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:</b>\n` +
        `${
            settings.auroraNotifications
                ? "‚Ä¢ –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –≤–∞—à—É –ª–æ–∫–∞—Ü—ñ—é —Ç–∞ –º–∞–≥–Ω—ñ—Ç–Ω—É —à–∏—Ä–æ—Ç—É\n" +
                  "‚Ä¢ –ö–æ–ª–∏ Kp-—ñ–Ω–¥–µ–∫—Å –¥–æ—Å—è–≥–Ω–µ —Ä—ñ–≤–Ω—è –¥–ª—è –ø–æ–ª—è—Ä–Ω–∏—Ö —Å—è–π–≤ —É –≤–∞—à–æ–º—É —Ä–µ–≥—ñ–æ–Ω—ñ\n" +
                  "‚Ä¢ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑ –ø–æ—Ä–∞–¥–∞–º–∏ –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è\n" +
                  "‚Ä¢ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ —á–∞—Å—Ç—ñ—à–µ —Ä–∞–∑ –Ω–∞ 6 –≥–æ–¥–∏–Ω"
                : "‚Ä¢ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–ª—è—Ä–Ω—ñ —Å—è–π–≤–∞ –≤–∏–º–∫–Ω–µ–Ω—ñ\n" +
                  "‚Ä¢ –£–≤—ñ–º–∫–Ω—ñ—Ç—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å\n" +
                  "‚Ä¢ –ö–æ–ª–∏ –≥–µ–æ–º–∞–≥–Ω—ñ—Ç–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–æ–∑–≤–æ–ª–∏—Ç—å –ø–æ–±–∞—á–∏—Ç–∏ —Å—è–π–≤–∞"
        }`;

    await safeEditMessage(ctx, message, {
        reply_markup: { inline_keyboard: keyboard },
        parse_mode: "HTML",
    });
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—É
async function showDailySettings(ctx, userSettings) {
    const userId = ctx.from.id;
    const settings = userSettings.get(userId) || { ...defaultSettings };

    const statusEmoji = settings.dailyForecast ? "üü¢" : "üî¥";
    const statusText = settings.dailyForecast ? "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–í–∏–º–∫–Ω–µ–Ω–æ";

    const keyboard = [];

    if (settings.dailyForecast) {
        keyboard.push([
            {
                text: "üî¥ –í–∏–º–∫–Ω—É—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑",
                callback_data: "disable_daily",
            },
        ]);
    } else {
        keyboard.push([
            {
                text: "üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑",
                callback_data: "enable_daily",
            },
        ]);
    }

    keyboard.push([{ text: "‚Üê –ù–∞–∑–∞–¥", callback_data: "back_to_settings" }]);

    const message =
        `üìä <b>–©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –∫–æ—Å–º—ñ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏</b>\n\n` +
        `${statusEmoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${statusText}\n\n` +
        `<b>üî∏ –©–æ –≤–∫–ª—é—á–µ–Ω–æ:</b>\n` +
        `${
            settings.dailyForecast
                ? "‚Ä¢ –©–æ–¥–Ω—è –æ 08:00 –∑–∞ –º—ñ—Å—Ü–µ–≤–∏–º —á–∞—Å–æ–º\n" +
                  "‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑ Kp-—ñ–Ω–¥–µ–∫—Å—É –Ω–∞ –¥–µ–Ω—å\n" +
                  "‚Ä¢ –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –≥–µ–æ–º–∞–≥–Ω—ñ—Ç–Ω–∏—Ö –±—É—Ä\n" +
                  "‚Ä¢ –ü–æ—Ä–∞–¥–∏ –¥–ª—è –≤–∞—à–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É\n" +
                  "‚Ä¢ –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–æ–ª—è—Ä–Ω–∏—Ö —Å—è–π–≤"
                : "‚Ä¢ –©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –≤–∏–º–∫–Ω–µ–Ω–∏–π\n" +
                  "‚Ä¢ –£–≤—ñ–º–∫–Ω—ñ—Ç—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–∞–Ω–∫–æ–≤–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—É\n" +
                  "‚Ä¢ –ö–æ—Ä–∏—Å–Ω–æ –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è –¥–Ω—è"
        }`;

    await safeEditMessage(ctx, message, {
        reply_markup: { inline_keyboard: keyboard },
        parse_mode: "HTML",
    });
}

module.exports = {
    showMainSettings,
    showKpThresholdSettings,
    showAuroraSettings,
    showDailySettings,
    safeEditMessage,
    defaultSettings,
};
